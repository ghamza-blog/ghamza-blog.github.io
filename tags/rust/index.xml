<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Rust on Ghamza Blog</title><link>https://blog.ghamza.dev/tags/rust/</link><description>Recent content in Rust on Ghamza Blog</description><generator>Hugo -- gohugo.io</generator><copyright>Â© Hamza Jadid</copyright><lastBuildDate>Fri, 07 Apr 2023 04:20:15 +0200</lastBuildDate><atom:link href="https://blog.ghamza.dev/tags/rust/index.xml" rel="self" type="application/rss+xml"/><item><title>Building a CLI tool in Rust</title><link>https://blog.ghamza.dev/posts/rust-cli/</link><pubDate>Fri, 07 Apr 2023 04:20:15 +0200</pubDate><guid>https://blog.ghamza.dev/posts/rust-cli/</guid><description>Today we&amp;rsquo;re going learn how to write a CLI tool in rust through creating a dummy implementation of Github&amp;rsquo;s CLI tool.
We&amp;rsquo;re calling it dugh (dummy Github ðŸ¤“).
Defining the functionality Before we start writing code, we should define the functionality of our tool.
We will start with managing pull requests command and making the tool extensible for other commands.
An example command would be:
cargo dugh pr create -t &amp;#34;title&amp;#34; -d Project setup Create a new bin rust project.</description></item><item><title>Rust .env</title><link>https://blog.ghamza.dev/posts/rust-dotenv/</link><pubDate>Wed, 11 Jan 2023 03:09:15 +0200</pubDate><guid>https://blog.ghamza.dev/posts/rust-dotenv/</guid><description>Environment Variables Good practice in software development is parametrizing our environment; for example, if we&amp;rsquo;re accessing a database and want to store the URL, username, and password, we should parametrize them so we can deploy staging and production environments without changing code.
Enviroment Varaibles in Rust We can access the environment variables from std::env::var.
use std::env; fn main() { let db_url = env::var(&amp;#34;DB_URL&amp;#34;).unwrap(); let db_user = env::var(&amp;#34;DB_USER&amp;#34;).unwrap(); let db_pass = env::var(&amp;#34;DB_PASS&amp;#34;).</description></item></channel></rss>